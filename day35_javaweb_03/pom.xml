<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.itheima</groupId>
    <artifactId>day35_javaweb_03</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <dependencies>
        <!--引入servlet相关的jar包-->
        <!--servlet-api.jar-->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <!--
              依赖的范围:
                compile:默认的，如果没写scope那么默认就是compile，编译时有效、测试时有效、运行时有效，一般的jar包都是这个范围
                test: 编译时无效、测试时有效、运行时无效，一般只有Junit单元测试的jar包。只在test/java中使用的jar
                provided: 编译时有效、测试时有效、运行时无效，运行时不需要的jar包
                runtime: 编译时无效、测试时有效、运行时有效, 编译时不会使用的jar包 比如mysql驱动、比如Lombok
            -->
            <scope>provided</scope>
        </dependency>
        <!--jsp-api.jar-->
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>2.2</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <!--
    引入maven插件
  -->
    <build>
        <plugins>
            <!--jdk编译插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>utf-8</encoding>
                </configuration>
            </plugin>

            <!--
                tomcat插件：maven官方提供的tomcat插件只有7的版本
            -->
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <!-- 指定端口 -->
                    <port>8811</port>
                    <!-- 项目路径 -->
                    <path>/web03</path>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>